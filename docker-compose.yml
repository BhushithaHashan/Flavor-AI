version: '3.8'

services:
  postgres:
    image: postgres:15
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: devdb
    volumes:
      - pgdata:/var/lib/postgresql/data
      - ./deploy/postgres/init/:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U dev -d authdb"]
      interval: 5s
      timeout: 5s
      retries: 10

  redis:
    image: redis:7
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 2s
      retries: 5

  auth-service:
    build: ./services/auth-service/auth-service
    volumes:
      - ~/.m2:/root/.m2  
    environment:
      # SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/authdb
      # SPRING_DATASOURCE_USERNAME: dev
      # SPRING_DATASOURCE_PASSWORD: dev
      SPRING_REDIS_HOST: redis
      JWT_SECRET: c2VjdXJlLXRvcC1zZWNyZXQta2V5LTI1Ni1iaXRzLXNlY3VyZQ==

    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8080/api/auth/test || exit 1"]
      interval: 5s
      timeout: 5s
      retries: 10
      start_period: 15s



  # user-service:
  #   build: ./services/user-service
  #   environment:
  #     SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/userdb
  #     SPRING_DATASOURCE_USERNAME: dev
  #     SPRING_DATASOURCE_PASSWORD: dev
  #   depends_on:
  #     postgres:
  #       condition: service_healthy
  #   healthcheck:
  #     test: ["CMD", "curl", "-f", "http://localhost:8081/actuator/health || exit 1"]
  #     interval: 5s
  #     timeout: 2s
  #     retries: 10

  # recipe-service:
  #   build: ./services/recipe-service
  #   environment:
  #     SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/recipedb
  #     SPRING_DATASOURCE_USERNAME: dev
  #     SPRING_DATASOURCE_PASSWORD: dev
  #     SPRING_REDIS_HOST: redis
  #   depends_on:
  #     postgres:
  #       condition: service_healthy
  #     redis:
  #       condition: service_healthy
  #   healthcheck:
  #     test: ["CMD", "curl", "-f", "http://localhost:8082/actuator/health || exit 1"]
  #     interval: 5s
  #     timeout: 2s
  #     retries: 10

  nginx:
    image: nginx:stable
    ports:
      - "8080:80"
    volumes:
      - ./deploy/nginx/nginx.conf:/etc/nginx/nginx.conf:ro

    # entrypoint: ["/wait-for-services.sh"]
    depends_on:
      auth-service:
        condition: service_healthy
      # user-service:
      #   condition: service_healthy
      # recipe-service:
      #   condition: service_healthy

volumes:
  pgdata:
